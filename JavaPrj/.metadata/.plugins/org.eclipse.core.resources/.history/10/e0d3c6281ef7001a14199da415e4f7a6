import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;

public class Chapter4Ex8 {

	public static void main(String[] args) throws IOException {

		FileInputStream fis = new FileInputStream("res\\data3.txt");
		Scanner scan = new Scanner(fis);

		/*
		 * //둘중 편한 방법 이용
		 * 
		 * int[] nums1 = new int[] {1,2,3,4,5}; int[] nums2 = {6,7,8};
		 * 
		 * int[][] nums = new int[2][];//방이 만들어지는걸 보류 nums[0]=nums1; nums[1]=nums2;
		 * 
		 * nums[0][2] =40; //nums[0][2]의 값을 바꾸니까 //nums1[2]의 값도 같이 바뀐다 //이제야 제대로 된 참조를
		 * 보네
		 */

		// 길이를 한번에 배열에 넣자 //////길이를 이용한 gs 배열 크기 지정
		/////////////////////// 데이터 입력
		int[] lengths = { 8, 5, 9 };// 각 반의 개수와 데이터의 길이를 알기때문에 lengths라는 3의 크기를 갖는 배열에 넣어줬습니다
		int[][] gs = new int[3][]; // 2차원 배열인 gs를 생성하는데,그 2차원 배열의 원소는 lengths의 크기 처럼 각 반의 개수를 의미하기때문에 총 3개짜리로
									// 만들었습니다.
		for (int i = 0; i < lengths.length; i++) {// 각 반의 개수만큼 i값을 증가시켜 데이터를 gs에 넣을것입니다
			int cnt = lengths[i];
			gs[i] = new int[cnt];// gs[i][cnt] 라는거야 값을 넣은게 아니지 객체 생성이지
		}

		for (int j = 0; j < gs.length; j++) {
			String line = scan.nextLine();
			String[] kors = line.split(",");
			for (int i = 0; i < kors.length; i++) {
				gs[j][i] = Integer.parseInt(kors[i]);
			}
		}

		scan.close();
		fis.close();
		////////////////////////////////////////////////////////// 정렬////////////////////////////////
		///// 정렬 1반 학생을 오름차순으로 정렬 후 내림차순으로도 정렬해보기

		for (int i = 0; i < gs.length; i++) { // 모든 반 까지 출력
			int cnt = lengths[i];
			for (int j = 0; j < cnt; j++) {// 각 반의 학생 수만큼 반복
				for (int s = 0; s < cnt - 1 - j; s++) { // 정렬은 점점 횟수가 줄어들면서 한다
					if (gs[i][s] < gs[i][s + 1]) {
						int tmp = gs[i][s];
						gs[i][s] = gs[i][s + 1];
						gs[i][s + 1] = tmp;
					}
				}
			}
		}
		// 내림차순으로 정렬하고(위에서 했지) 각 반의 1등을 기준으로 내림차순으로 반 정렬하기
		for (int i = 0; i < gs.length; i++) {
			if (gs[i][0] < gs[i + 1][0]) {
				int[] temp = gs[0];
				gs[0] = gs[1];
				gs[1] = temp; // 이렇게 했을때 출력되게 출력코드 수정
			}
		}

		///// 출력

//		for(int i=0;i<gs.length;i++) {
//			lengths[i]=gs[i].length;
//		}
		for (int j = 0; j < gs.length; j++) {
			int size = gs[j].length;

			for (int i = 0; i < size; i++) {
				System.out.printf("%d", gs[j][i]);
				if (i < size - 1)
					System.out.printf(",");
			}

			System.out.println();
		}

		////////////// 함수/////////////////////
//		int[][] fgs = new int[3][];
//		inputData(fgs);
//		sortData(fgs);
//		outputData(fgs);
	}

	static int[][] inputData(int[][] fgs) throws IOException {
		FileInputStream fis = new FileInputStream("res\\data3.txt");
		Scanner scan = new Scanner(fis);
		int i = 0;
		while (scan.hasNextLine()) {
			String line = scan.nextLine();
			String[] kors = line.split(",");
			for (int j = 0; j < kors.length; j++)
				fgs[i][j] = Integer.parseInt(kors[j]);// 반복
			i++;
		}
		scan.close();
		fis.close();
		return fgs;
	}

	static int[][] sortData(int[][] fgs) {
//		for(int i=0;)

		return fgs;
	}

	static void outputData(int[][] fgs) {
		System.out.println("================함수사용================");
		for (int i = 0; i < fgs.length; i++) {
			for (int j = 0; j < fgs[i].length; j++) {
				if (j == 0)
					System.out.printf("%d반 점수 : ", i + 1);
				System.out.printf("%d ", fgs[i][j]);
			}
			System.out.println();
		}
	}
}