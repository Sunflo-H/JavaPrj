import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;

public class Chapter4Ex8 {

	public static void main(String[] args) throws IOException {

		FileInputStream fis = new FileInputStream("res\\data3.txt");
		Scanner scan = new Scanner(fis);

		/*
		 * //둘중 편한 방법 이용
		 * 
		 * int[] nums1 = new int[] {1,2,3,4,5}; int[] nums2 = {6,7,8};
		 * 
		 * int[][] nums = new int[2][];//방이 만들어지는걸 보류 nums[0]=nums1; nums[1]=nums2;
		 * 
		 * nums[0][2] =40; //nums[0][2]의 값을 바꾸니까 //nums1[2]의 값도 같이 바뀐다 //이제야 제대로 된 참조를
		 * 보네
		 */

		// 길이를 한번에 배열에 넣자 //////길이를 이용한 gs 배열 크기 지정
//		int[] lengths = { 8, 5, 9 }; // 길이 배열 생성 완료
//		int[][] gs = new int[lengths.length][];
//
//		for (int i = 0; i < lengths.length; i++) {
//			int cnt = lengths[i];
//			gs[i] = new int[cnt];
//		}

		/////////////////////// 데이터 입력
		int[] lengths = { 8, 5, 9 };
		int[][] gs = new int[3][];
		for (int i = 0; i < lengths.length; i++) {
			int cnt = lengths[i];
			gs[i] = new int[cnt];// gs[i][cnt] 라는거야 값을 넣은게 아니지 객체 생성이지
		}
		for (int j = 0; j < gs.length; j++) {
			String line = scan.nextLine();
			String[] kors = line.split(",");
			for (int i = 0; i < kors.length; i++) {
				gs[j][i] = Integer.parseInt(kors[i]);
			}
		}

		scan.close();
		fis.close();
		///// 정렬 1반 학생을 오름차순으로 정렬 후 내림차순으로도 정렬해보기
		int tmp = 0;
//		for (int i = 0; i < gs.length; i++) // 모든 반 까지 출력
//			for (int j = 0; j < gs[i].length; j++) {// 각 반의 학생 수만큼 반복
//				for (int s = 0; s < gs[i].length - 1 - j; s++) { // 정렬은 점점 횟수가 줄어들면서 한다
//					if (gs[i][s] < gs[i][s + 1]) {
//						tmp = gs[i][s];
//						gs[i][s] = gs[i][s + 1];
//						gs[i][s + 1] = tmp;
//					}
//				}
//			}

		// 반복문 중첩 줄여보기
//		for (int i = 0; i < gs.length; i++) // 모든 반 까지 출력
//			for (int j = 0; j < gs[i].length;) {// 각 반의 학생 수만큼 반복
//				//int[] g =gs[i];
//				int s=0;
//				if (gs[i][s] < gs[i][s + 1]) {
//					tmp = gs[i][s];
//					gs[i][s] = gs[i][s + 1];
//					gs[i][s + 1] = tmp;
//					if(s<gs[i].length-1-s)
//						s++;
//				}
//				else
//					s++;
//				if(s+1==gs[i].length-1 -j)
//					j++;
//			}

		////////////////// 한반을 for하나만 써서 정렬해보기 (성공
//		{
//			int s = 0;
//			for (int j = 0; j < gs[1].length;) { // gs[1].length = 4
//				if (s == gs[1].length - 1)
//					s = 0;
//				if (gs[1][s] < gs[1][s + 1]) {// gs[0][0] <->gs[0][1]
//					tmp = gs[1][s];
//					gs[1][s] = gs[1][s + 1];
//					gs[1][s + 1] = tmp;
//					System.out.printf("j : %d, s : %d, gs[1][%d] : %d, gs[1][%d] : %d\n ", j, s, s, gs[1][s], s + 1,
//							gs[1][s + 1]);
//					s++;
//				} else
//					s++;
//				if (s == gs[1].length - 1)
//					j++;
//			}
//		}
//		for (int i = 0; i < gs[1].length; i++) {
//			System.out.printf("%d ", gs[1][i]);
//		}
		///////////////////////////////

		for (int i = 0; i < gs.length; i++) {
			int s = 0;
			for (int j = 0; j < gs[i].length;) { // gs[1].length = 4
				if (s == gs[1].length - 1)
					s = 0;
				if (gs[i][s] < gs[i][s + 1]) {// gs[0][0] <->gs[0][1]
					tmp = gs[i][s];
					gs[i][s] = gs[i][s + 1];
					gs[i][s + 1] = tmp;
					System.out.printf("j : %d, s : %d, gs[%d][%d] : %d, gs[%d][%d] : %d\n ", j, s, j,s, gs[1][s],j, s + 1,
							gs[i][s + 1]);
					s++;
				} else
					s++;
				if (s == gs[i].length -1)
					j++;
			}
		}
		for (int j = 0; j < gs.length; j++) {
			for (int i = 0; i < gs[j].length; i++) {
				System.out.printf("%d ", gs[j][i]);
			}
			System.out.println();
		}
		///// 출력

//		for (int j = 0; j < gs.length; j++) {
//			int size = lengths[j];
//
//			for (int i = 0; i < size; i++) {
//				System.out.printf("%d", gs[j][i]);
//				if (i < size - 1)
//					System.out.printf(",");
//			}
//
//			System.out.println();
//		}

		////////////// 함수/////////////////////
//		int[][] fgs = new int[3][];
//		inputData(fgs);
//		sortData(fgs);
//		outputData(fgs);
	}

	static int[][] inputData(int[][] fgs) throws IOException {
		FileInputStream fis = new FileInputStream("res\\data3.txt");
		Scanner scan = new Scanner(fis);
		int i = 0;
		while (scan.hasNextLine()) {
			String line = scan.nextLine();
			String[] kors = line.split(",");
			for (int j = 0; j < kors.length; j++)
				fgs[i][j] = Integer.parseInt(kors[j]);// 반복
			i++;
		}
		scan.close();
		fis.close();
		return fgs;
	}

	static int[][] sortData(int[][] fgs) {
//		for(int i=0;)

		return fgs;
	}

	static void outputData(int[][] fgs) {
		System.out.println("================함수사용================");
		for (int i = 0; i < fgs.length; i++) {
			for (int j = 0; j < fgs[i].length; j++) {
				if (j == 0)
					System.out.printf("%d반 점수 : ", i + 1);
				System.out.printf("%d ", fgs[i][j]);
			}
			System.out.println();
		}
	}
}